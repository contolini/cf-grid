// Make sure you import Ghost.
@import "ghost.less";

// Give columns a background color to aid debugging.
@total-columns: 12;
@wrapper-width: 1200px;
@debug: true;

body {
  font-family: "Avenir Next", Arial, sans-serif;
  margin: 0;
}

h1 {
  .wrapper();
  .row();
  margin-top: 100px;
  margin-bottom: 20px;
}

// Twelve columns, 1200px wide

.cols-12 {

  .wrapper();

  section {
    .row();
  }

  // column class generation, based on ghost-plus.less

  .columnX ( @index ) when ( @index > 0 ) {

    ( ~".col-@{index}" ) {
      .column( @index );
    }

    .prefixX ( @index, @total-columns - @index );
    .suffixX ( @index, @total-columns - @index );


    ( ~".push-@{index}" ) {
      .push( @index );
    }

    ( ~".pull-@{index}" ) {
      .pull( @index );
    }

    .columnX( @index - 1 );

  }

  .prefixX ( @index, @indexP ) when (@indexP > 0) {
    
    ( ~".col-@{index}.prefix-@{indexP}" ) {
      .column( @index );
      .prefix( @indexP );
    }

    .prefixX ( @index, @indexP - 1 );

  }

  .suffixX ( @index, @indexS ) when (@indexS > 0) {
    
    ( ~".col-@{index}.suffix-@{indexS}" ) {
      .column( @index );
      .suffix( @indexS );
    }

    .suffixX ( @index, @indexS - 1 );

  }

  .columnX ( 0 ) {}

  .columnX ( @total-columns );


  // .one {
  //   .column(1);
  // }

  // .two {
  //   .column(2);
  // }

  // .three {
  //   .column(3);
  // }

  // .four {
  //   .column(4);
  // }

  // .six {
  //   .column(6);
  // }

  // .twelve {
  //   .column(12);
  // }

  .column {
    //padding: 20px 0;
    text-align: center;
    margin-bottom: 10px;
  }

  // // Prefix tests

  // .one.prefix-one {
  //   .column(1);
  //   .prefix(1);
  // }
  // .one.prefix-two {
  //   .column(1);
  //   .prefix(2);
  // }

  // .prefix-two {
  //   .prefix(2);
  // }
  // .prefix-three {
  //   .prefix(3);
  // }
  // .prefix-four {
  //   .prefix(4);
  // }
  // .prefix-five {
  //   .prefix(5);
  // }
  // .prefix-six {
  //   .prefix(6);
  // }
  // .prefix-seven {
  //   .prefix(7);
  // }
  // .prefix-eight {
  //   .prefix(8);
  // }
  // .prefix-nine {
  //   .prefix(9);
  // }
  // .prefix-ten {
  //   .prefix(10);
  // }
  // .prefix-eleven {
  //   .prefix(11);
  // }

  // Push/pull tests

  .push-one {
    .push(1);
  }

  .push-two {
    .push(2);
  }

  .push-three {
    .push(3);
  }

  .pull-one {
    .pull(1);
  }

  .pull-two {
    .pull(2);
  }

  // Nesting tests
  
  .col-6 {
    section {
      .row();
    }
    .col-two {
      .column( 2, 6 );
      background-color: rgba( 0, 0, 0, .25 ) !important;
    }
  }
  
  .col-three {
    section {
      .row();
    }
    .col-one {
      .column( 1, 3 );
      background-color: rgba( 0, 0, 0, .25 ) !important;
    }
  }

  // Viewport adjustments

  @media only screen and ( max-width: 767px ) {

    .column {
      // We're using an important flag to ensure the above nested children 
      // are also set to 12 columns. Normally, you'd have CSS rules for 
      // nested children in your media query but to keep things simple in 
      // this test runner I'm just using !important to coerce all columns.
      .column(12) !important;
      // For the push() column()s, we have to make sure the offset is removed.
      margin-left: 0;
    }

  }

}


// Twelve columns, 960px wide

.cols-12.w-960 {

  .wrapper( 960px );

}


/*@total-columns: 16;

// Sixteen columns, 1200px wide

.cols-16 {

  .wrapper();

  section {
    .row();
  }

  .columnX ( @index ) when ( @index > 0 ) {

    ( ~".col-@{index}" ) {
      .column( @index );
    }

    .prefixX ( @index, @total-columns - @index );
    .suffixX ( @index, @total-columns - @index );


    ( ~".push-@{index}" ) {
      .push( @index );
    }

    ( ~".pull-@{index}" ) {
      .pull( @index );
    }

    .columnX( @index - 1 );

  }

  .prefixX ( @index, @indexP ) when (@indexP > 0) {
    
    ( ~".col-@{index}.prefix-@{indexP}" ) {
      .column( @index );
      .prefix( @indexP );
    }

    .prefixX ( @index, @indexP - 1 );

  }

  .suffixX ( @index, @indexS ) when (@indexS > 0) {
    
    ( ~".col-@{index}.suffix-@{indexS}" ) {
      .column( @index );
      .suffix( @indexS );
    }

    .suffixX ( @index, @indexS - 1 );

  }

  .columnX ( 0 ) {}

  .columnX ( @total-columns );

  // .one {
  //   .column(1, 16);
  // }

  // .two {
  //   .column(2, 16);
  // }

  // .four {
  //   .column(4, 16);
  // }

  // .eight {
  //   .column(8, 16);
  // }

  .column {
    //padding: 20px 0;
    text-align: center;
    margin-bottom: 10px;
  }


  // Push/pull tests

  .push-one {
    .push(1, 16);
  }

  .push-two {
    .push(2, 16);
  }

  .push-four {
    .push(4, 16);
  }

  .pull-two {
    .pull(2, 16);
  }

  // Nesting tests
  
  .col-six {
    section {
      .row();
    }
    .col-two {
      .column( 2, 6 );
      background-color: rgba( 255, 255, 255, .5 ) !important;
    }
  }
  
  .col-three {
    section {
      .row();
    }
    .col-one {
      .column( 1, 3 );
      background-color: rgba( 255, 255, 255, .5 ) !important;
    }
  }

  // Viewport adjustments

  @media only screen and ( max-width: 767px ) {

    .column {
      .column(12);
      // Because we're using push(), we have to make sure the offset is
      // removed on smaller screens. Ideally this will someday be baked
      // into core ghost.less.
      margin-left: 0 !important;
      margin-bottom: 10px;
    }

  }

}


// Sixteen columns, 960px wide

.cols-16.w-960 {

  .wrapper( 960px );

}*/


// Misc. test runner stuff

body > div {

  border-bottom: 1px solid #ccc;
  padding-top: 20px !important;
  padding-bottom: 40px !important;
  clear: both;

}

@media only screen and ( max-width: 99999px ) {
  .cols-12 .column,
  .cols-16 .column {
    margin-bottom: 10px;

    div {
      padding: 20px 0;
      background-color: #f9af51 !important;
    }
  }
}

h2, h3 {
  clear: both;
}